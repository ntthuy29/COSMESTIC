@model COSMESTIC.Models.Data.Products

@{
    var role = Context.Session.GetString("role");
}

<div class="container product-detail">
    <div class="row mt-5">
        <div class="col-md-5 product-image">
            <img src="~/@Model.imagePath" alt="@Model.productName" class="img-fluid rounded shadow" />
        </div>
        <div class="col-md-7 product-info">
            <h2 class="product-name text-danger">@Model.productName</h2>
            <h3 class="product-price text-warning">
                Giá: @Model.price.ToString("N0") ₫
            </h3>
            <p><strong>Số lượng :</strong> @Model.quantity</p>

            <div class="quantity-selector d-flex align-items-center mb-3">
                <button class="btn btn-light btn-quantity" id="decrease-btn">
                    -
                </button>
                <span id="quantity-display">1</span> <!-- Mặc định là 1 -->
                <button class="btn btn-light btn-quantity" id="increase-btn">
                    +
                </button>
            </div>

            <div class="product-description mb-4">
                <strong>Mô tả:</strong> @Model.productDescription
            </div>

            <div class="action-buttons d-flex gap-5">

                


                @if (role == "Customer")
                {
                    <div class="">
                        <form method="post" action="@Url.Action("ShippingInformationBuyNow", "Order")">
                            <input type="hidden" name="productId" value="@Model.productID" />
                            <input type="hidden" name="quantity" id="productQuantityBuyNow" value="1" /> <!-- Số lượng cho "Mua ngay" -->
                            <button type="submit" class="btn btn-success me-2">Mua ngay</button>
                        </form>

                    </div>
                    <form method="post" action="@Url.Action("AddToCart", "ShoppingCart")">
                        <input type="hidden" name="productId" value="@Model.productID" />

                        <input type="hidden" name="quantity" id="productQuantityAddToCart" value="1" />
                        <button class="btn btn-danger">Thêm vào giỏ hàng</button>

                       

                    </form>
                }
                else
                {
                    <div class="" onclick="alertLogin()"> <button class="btn btn-success me-2">Mua ngay</button></div>
                    <div class="" onclick="alertLogin()">
                        <input type="hidden" name="productId" value="@Model.productID" />
                        <button class="btn btn-danger">Thêm vào giỏ hàng</button>
                    </div>
                }
            </div>
        </div>
        @if (role == null)
        {
            <div id="deleteModal" class="modal" style="display: none;">

                <div class="modal-content">
                    <span type="button" class="btn-close" disabled aria-label="Close" style=" margin-right: auto;" id="close" onclick="setCursor()"></span>
                    <p class="text-center" style="font-size: 20px;">Vui lòng đăng nhập</p>
                    <div class="d-flex justify-content-sm-between">
                        <form action="/Login/Login" method="get">
                            <button type="submit" class="btn btn-danger" id="confirmDelete">Đăng nhập</button>
                        </form>


                        <form action="/Register/Register"> <button id="cancelDelete" class="btn btn-secondary">Đăng ký tài khoản</button> </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="product-reviews mt-5 pt-4 border-top">
        <h4 class="mb-4">Đánh giá sản phẩm</h4>

        @if (Model.ProductReviews != null && Model.ProductReviews.Any())
        {
            <div class="reviews-list">
                @foreach (var review in Model.ProductReviews.OrderByDescending(r => r.CreateDate)) // Sắp xếp mới nhất lên đầu
                {
                    <div class="card review-item mb-3 shadow-sm">
                        <div class="card-header bg-light py-2">
                            <strong class="text-primary">@review.user.fullName</strong>
                            <span class="float-end review-stars">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.rating)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                        // Icon sao đầy
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                        // Icon sao rỗng (hoặc fas fa-star text-muted)
                                    }
                                }
                            </span>
                        </div>
                        <div class="card-body">
                            <p class="card-text">@review.comment</p>
                        </div>
                        <div class="card-footer text-muted py-1">
                            <small>@review.CreateDate.ToString("dd/MM/yyyy HH:mm")</small>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                Chưa có đánh giá nào cho sản phẩm này. Hãy là người đầu tiên đánh giá!
            </div>
        }

        @if (role == "Customer")
        {
            <div class="add-review-section mt-4 p-4 border rounded bg-light">
                @if (ViewBag.HasPurchased == null || !(bool)ViewBag.HasPurchased)
                {
                    <div class="alert alert-warning" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>Bạn cần mua sản phẩm này trước khi có thể đánh giá.
                    </div>
                }
                else
                {
                    // Giả sử ViewBag.HasReviewed = true nghĩa là "chưa đánh giá" và false là "đã đánh giá"
                    // Logic này hơi ngược, thường HasReviewed = true là "đã đánh giá"
                    // Giữ nguyên logic của bạn: !ViewBag.HasReviewed -> "đã đánh giá"
                    if (!(bool)ViewBag.HasReviewed) // Nếu HasReviewed là false (nghĩa là đã đánh giá theo logic cũ)
                    {
                        <div class="alert alert-success" role="alert">
                            <i class="fas fa-check-circle me-2"></i>Cảm ơn bạn đã đánh giá sản phẩm này! Bạn có thể đánh giá lại ở lần mua hàng tiếp theo.
                        </div>
                    }
                    else // Nếu HasReviewed là true (nghĩa là chưa đánh giá và có thể đánh giá)
                    {
                        <h5 class="mb-3">Viết đánh giá của bạn</h5>
                        <form method="post" action="@Url.Action("AddReview", "Product")">
                            <input type="hidden" name="productID" value="@Model.productID" />
                            <div class="mb-3">
                                <label for="rating" class="form-label">Xếp hạng của bạn:</label>
                                <select class="form-select" name="rating" id="rating" required>
                                    <option value="" disabled selected>Chọn số sao...</option>
                                    <option value="5">5 Sao <i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i></option>
                                    <option value="4">4 Sao <i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i></option>
                                    <option value="3">3 Sao <i class="fas fa-star"></i><i class="fas fa-star"></i><i class="fas fa-star"></i></option>
                                    <option value="2">2 Sao <i class="fas fa-star"></i><i class="fas fa-star"></i></option>
                                    <option value="1">1 Sao <i class="fas fa-star"></i></option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="comment" class="form-label">Nhận xét của bạn:</label>
                                <textarea class="form-control" name="comment" id="comment" rows="4" placeholder="Sản phẩm này như thế nào?" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane me-2"></i>Gửi đánh giá</button>
                        </form>
                    }
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantityDisplay = document.getElementById('quantity-display');
            const productQuantityBuyNowInput = document.getElementById('productQuantityBuyNow');
            const productQuantityAddToCartInput = document.getElementById('productQuantityAddToCart');
            const increaseBtn = document.getElementById('increase-btn');
            const decreaseBtn = document.getElementById('decrease-btn');
            const maxQuantity = parseInt('@Model.quantity'); // Lấy số lượng tối đa từ Model

            function updateQuantityInputs(newQuantity) {
                if (productQuantityBuyNowInput) {
                    productQuantityBuyNowInput.value = newQuantity;
                }
                if (productQuantityAddToCartInput) {
                    productQuantityAddToCartInput.value = newQuantity;
                }
            }

            let initialQuantity = 1; // Khởi tạo mặc định là 1
             if (quantityDisplay) { // Kiểm tra quantityDisplay có tồn tại không
                initialQuantity = parseInt(quantityDisplay.innerText) || 1;
                quantityDisplay.innerText = initialQuantity;
                updateQuantityInputs(initialQuantity);
            }


            if (increaseBtn) {
                increaseBtn.addEventListener('click', function () {
                    let currentQuantity = parseInt(quantityDisplay.innerText);
                    if (currentQuantity < maxQuantity) { // Kiểm tra không vượt quá số lượng tồn kho
                        currentQuantity++;
                        quantityDisplay.innerText = currentQuantity;
                        updateQuantityInputs(currentQuantity);
                    } else {
                        // Tùy chọn: thông báo cho người dùng đã đạt số lượng tối đa
                        alert('Bạn đã chọn số lượng tối đa cho sản phẩm này.');
                    }
                });
            }

            if (decreaseBtn) {
                decreaseBtn.addEventListener('click', function () {
                    let currentQuantity = parseInt(quantityDisplay.innerText);
                    if (currentQuantity > 1) {
                        currentQuantity--;
                        quantityDisplay.innerText = currentQuantity;
                        updateQuantityInputs(currentQuantity);
                    }
                });
            }
        });

        function alertLogin() {
            var modal = document.getElementById('deleteModal');
            if (modal) {
                modal.style.display = 'block';
                document.body.style.cursor = 'default'; // Đặt lại con trỏ chuột cho body
            }
        }

        // Optional: close modal when clicking outside
        window.onclick = function (event) {
            var modal = document.getElementById('deleteModal');
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        function setCursor(){
             document.body.style.cursor = 'default';
        }

    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/productDetail.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        .quantity-selector span {
            min-width: 30px; /* Tăng không gian cho số */
            text-align: center;
            display: inline-block;
            font-weight: bold;
            font-size: 1.1rem;
        }

        .btn-quantity {
            border-radius: 50%;
            width: 35px;
            height: 35px;
            line-height: 1; /* Căn giữa text trong button tròn */
        }

        .product-reviews {
            background-color: #f9f9f9; /* Nền nhẹ cho toàn bộ khu vực đánh giá */
            padding: 20px;
            border-radius: 8px;
        }

        .review-item .card-header {
            font-size: 0.95rem;
        }

        .review-item .card-body {
            font-size: 0.9rem;
        }

        .review-item .card-footer {
            font-size: 0.8rem;
        }

        .review-stars i {
            margin: 0 1px; /* Khoảng cách nhỏ giữa các sao */
        }

        /* CSS cho modal đăng nhập */
        .modal {
            display: none;
            position: fixed;
            z-index: 1050; /* Cao hơn các element khác */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5); /* Nền mờ */
        }

        .modal-content {
            background-color: #fff;
            margin: 15% auto; /* Căn giữa modal */
            padding: 25px;
            border: 1px solid #ddd;
            width: 80%;
            max-width: 450px; /* Giới hạn chiều rộng tối đa */
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0,0,0,.3);
            position: relative; /* Để btn-close có thể định vị */
        }

            .modal-content .btn-close {
                position: absolute;
                top: 10px;
                right: 15px;
                /* Bỏ background và border mặc định của Bootstrap nếu cần */
                /* background: none; */
                /* border: none; */
            }

        /* Cải thiện nút trong form đánh giá */
        .add-review-section .form-select,
        .add-review-section .form-control {
            font-size: 0.95rem; /* Kích thước font vừa phải */
        }

        .add-review-section .btn-primary {
            font-weight: bold;
        }

        /* Bổ sung CSS cho các thông báo trong phần đánh giá */
        .alert i {
            font-size: 1.1rem; /* Icon to hơn một chút */
        }

    </style>
}

<script src="~/js/alertLogin.js"></script>
